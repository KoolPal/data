name: iCarry Tracking Scraper

on:
  schedule:
    - cron: "38 * * * *"
  workflow_dispatch:
    branches:

jobs:
  build:
    env:
      PY_COLORS: "1"
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.13"]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set Locale
      run: |
        sudo apt-get install tzdata locales -y && sudo locale-gen en_US.UTF-8
        sudo localectl set-locale LANG="en_US.UTF-8"
        export LANG="en_US.UTF-8"
        sudo update-locale
        locale -a
        locale
        locale -c -k LC_NUMERIC
        localectl status
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install seleniumbase>=4.22.5
        pip install --upgrade pyautogui
        pip install --upgrade python-xlib
    
    - name: Check the console scripts interface
      run: |
        seleniumbase
        sbase
    
    - name: Install chromedriver
      run: |
        seleniumbase install chromedriver
    
    - name: Make sure pytest is working
      run: |
        echo "def test_1(): pass" > nothing.py
        pytest nothing.py --uc
    
    - name: Check which Chrome binaries exist
      run: |
        python -c "import os; print(os.path.exists('/usr/bin/google-chrome'))"
        python -c "import os; print(os.path.exists('/bin/google-chrome-stable'))"
        python -c "import os; print(os.path.exists('/bin/chromium-browser'))"
        python -c "import os; print(os.path.exists('/bin/chromium'))"
    
    - name: Display Chrome binary that's used
      run: |
        python -c "from seleniumbase.core import detect_b_ver; print(detect_b_ver.get_binary_location('google-chrome'))"
        python -c "from seleniumbase import undetected; print(undetected.find_chrome_executable())"
    
    - name: Run scraper
      env:
        TRACKING_NUMBER: ${{ github.event.inputs.tracking_number || '347720741487' }}
      run: |
        python scrape_tracking.py --debug
